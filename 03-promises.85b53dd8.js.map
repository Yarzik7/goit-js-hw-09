{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAEpCC,QAAQC,IAAIJ,EAAKK,UA6BjB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,IAC3BC,YAAW,KACT,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAoB,C,SAAET,E,MAAUC,GACtCK,EAAgBH,EAAQM,GAAqBL,EAAOK,EAAkB,GACvER,I,CARLR,EAAKiB,iBAAiB,UAzBGC,IACvBA,EAAMC,iBAEN,IACEX,OAASY,MAAOC,GAChBC,MAAQF,MAAOE,GACfC,QAAUH,MAAOG,IACfL,EAAMM,cAAcnB,SAExBgB,EAAQI,OAAOJ,GACfC,EAAOG,OAAOH,GACdC,EAASE,OAAOF,GAEhB,IAAK,IAAIG,EAAI,EAAGA,GAAKH,EAAQG,IAC3BpB,EAAcoB,EAAGL,GACdM,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,KACjBV,EAAA8B,OAAOC,QAAQ,uBAAqBtB,QAAiBC,SAAYsB,OAElE,EAAOvB,WAAUC,WAChBV,EAAA8B,OAAMG,QAAC,sBAASxB,QAA8BC,SAElDa,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nconsole.log(form.elements);\n\nconst onCreatePromises = event => {\n  event.preventDefault();\n\n  let {\n    delay: { value: delay },\n    step: { value: step },\n    amount: { value: amount },\n  } = event.currentTarget.elements;\n\n  delay = Number(delay);\n  step = Number(step);\n  amount = Number(amount);\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) =>\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n    delay += step;\n  }\n};\n\nform.addEventListener('submit', onCreatePromises);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => \n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      const promiseParameters = { position, delay };\n      shouldResolve ? resolve(promiseParameters) : reject(promiseParameters);\n  }, delay)\n );\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","console","log","elements","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","promiseParameters","addEventListener","event","preventDefault","value","delay1","step","amount","currentTarget","Number","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.85b53dd8.js.map"}