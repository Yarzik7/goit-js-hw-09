{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SA0CpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,G,OAC3BC,YAAW,WACT,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAoB,CAAET,WAAUC,SAEtBK,EAAAH,EAAQM,GAAqBL,EAAOK,E,GACrDR,E,IAfLL,EAAKc,iBAAiB,UA5BG,SAAAC,GACvBA,EAAMC,iBAEN,IAIIC,EAAAF,EAAMG,cAAcC,SAHbC,EAGPH,EAHFZ,MAASgB,MACDC,EAENL,EAFFK,KAAQD,MACEE,EACRN,EADFM,OAAUF,MAIsBD,EAA1BI,OAAOJ,GACfE,EAAOE,OAAOF,GACdC,EAASC,OAAOD,GAGmB,IAA9B,IAAIE,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCtB,EAAcsB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,M,OACjBP,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE9D0B,OAAM,SAAAJ,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,M,OAClBP,EAAA8B,OAAOI,QAAQ,sBAAuCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAEhEe,GAASE,EAEXtB,EAAKiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\n/**\n * Створює вказану кількість промісів\n * @param {event} Об'єкт події 'submit'\n */\nconst onCreatePromises = event => {\n  event.preventDefault();\n\n  let {\n    delay: { value: delay },\n    step: { value: step },\n    amount: { value: amount },\n  } = event.currentTarget.elements; // Отримання значень з полів сторінки\n\n  // Перетворення отриманих значень в число\n  delay = Number(delay);\n  step = Number(step);\n  amount = Number(amount);\n\n  // Створення вказаної в amount кількості промісів\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) =>\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`) // Обробка успішного виконання промісу\n      )\n      .catch(({ position, delay }) =>\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`) // Обробка невдалого виконання промісу\n      );\n    delay += step;\n  }\n  form.reset();\n};\n\nform.addEventListener('submit', onCreatePromises);\n\n/**\n * \n * @param {*} position Номер промісу, що створюється\n * @param {*} delay Затримка\n * @returns {object} Проміс\n */\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => \n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3; // Генерація успішності дії\n      const promiseParameters = { position, delay }; // Параметри промісу\n\n      shouldResolve ? resolve(promiseParameters) : reject(promiseParameters); // Виклик відповідного методу в залежності від успіху дії\n  }, delay) // Затримка зміни стану проміса\n );\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","promiseParameters","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","value","step","amount","Number","i","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.441d9950.js.map"}